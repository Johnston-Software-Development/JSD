name: ci

on:
    pull_request:
        branches:
            - main
            - master

jobs:
    ci:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [lts/*]

        env:
            NODE_ENV: production
            NUXT_ENV_FIREBASE_API_KEY: ${{ secrets.NUXT_ENV_FIREBASE_API_KEY }}
            NUXT_ENV_FIREBASE_AUTH_DOMAIN: ${{ secrets.NUXT_ENV_FIREBASE_AUTH_DOMAIN }}
            NUXT_ENV_FIREBASE_PROJECT_ID: ${{ secrets.NUXT_ENV_FIREBASE_PROJECT_ID }}
            NUXT_ENV_FIREBASE_STORAGE_BUCKET: ${{ secrets.NUXT_ENV_FIREBASE_STORAGE_BUCKET }}
            NUXT_ENV_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NUXT_ENV_FIREBASE_MESSAGING_SENDER_ID }}
            NUXT_ENV_FIREBASE_APP_ID: ${{ secrets.NUXT_ENV_FIREBASE_APP_ID }}
            NUXT_ENV_FIREBASE_MEASUREMENT_ID: ${{ secrets.NUXT_ENV_FIREBASE_MEASUREMENT_ID }}

        steps:
            - name: Checkout 🛎
              uses: actions/checkout@v2

            - name: Setup node env 🏗
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  check-latest: true

            - name: Get yarn cache directory path 🛠
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_ENV

            - name: Cache node_modules 📦
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ env.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies 👨🏻‍💻
              run: yarn

            # - name: Run linter 👀
            #   run: yarn lint

            - name: Generate
              run: yarn generate
